{"version":3,"sources":["webpack://Task/webpack/bootstrap","webpack://Task/./src/client/functionToObjectURL.js","webpack://Task/./src/client/index.js","webpack://Task/./src/client/isModern.js","webpack://Task/./src/WorkerManager.js","webpack://Task/./src/generateTaskFactoryMethod.js","webpack://Task/./src/client/WebWorker.js","webpack://Task/./src/GeneralWorker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","func","blob","stringFunc","toString","substring","indexOf","lastIndexOf","Blob","error","window","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","append","getBlob","URL","webkitURL","createObjectURL","WorkerProxies","isModern","require","WorkerManager","DefaultWorkerProxy","$config","Error","config","workerType","keys","forEach","functionToObjectURL","Worker","terminate","Transferables","transferables","this","map","transferable","ArrayBuffer","buffer","_terminated","_taskTimeout","_reissueTasksInTimedoutWorkers","_queue","length","worker","_getWorker","task","shift","_debug","_log","action","taskId","id","workerId","message","run","setTimeout","_next","_workers","filter","item","tasks","push","$options","managerCount","_workerType","_WorkerProxy","NodeWorkerThread","_logger","logger","console","log","_requires","requires","_workerTaskConcurrency","workerTaskConcurrency","_maxWorkers","maxWorkers","_idleTimeout","idleTimeout","taskTimeout","_idleCheckInterval","_warmStart","warmStart","_warmStartCompleted","_globals","globals","_globalsInitializationFunction","initialize","debug","JSON","stringify","_workersInitializing","_onWorkerTaskComplete","_flushIdleWorkers","_totalWorkersCreated","_lastTaskTimeoutCheck","Date","_createWorker","data","event","source","managerId","_idleCheckIntervalID","setInterval","arguments","Array","slice","taskCount","Promise","resolve","reject","args","function","wrappedFunc","wrap","from","lastArg","toArray","_run","clearInterval","some","startTime","forceExit","lastTaskTimestamp","idleWorkers","sort","a","b","onTaskComplete","onExit","_onWorkerExit","requireCode","globalsInitializationFunction","trim","_runOnWorker","then","defaults","WorkerProxy","WorkerProxyOverride","GeneralWorker","WebWorker","handleWorkerMessage","_worker","postMessage","WORKER_SOURCE","addEventListener","_onMessage","_onExitHandler","_onExit","kill","taskIndex","index","result","_onTaskComplete","splice","String","reason"],"mappings":"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","file":"task.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = function functionToObjectURL (func) {\n\tvar blob,\n\t\tstringFunc = func.toString();\n\n\tstringFunc = stringFunc.substring(stringFunc.indexOf('{') + 1, stringFunc.lastIndexOf('}'))\n\n\ttry {\n\t\tblob = new Blob([stringFunc], { 'type' : 'text/javascript' });\n\t} catch (error) { // Backwards-compatibility\n\t\twindow.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n\t\tblob = new BlobBuilder();\n\t\tblob.append(stringFunc);\n\t\tblob = blob.getBlob();\n\t}\n\n\treturn (window.URL || window.webkitURL).createObjectURL(blob);\n};","const isModern = require('./isModern');\nconst WorkerManager = require('../WorkerManager');\nconst generateTaskFactoryMethod = require('../generateTaskFactoryMethod');\n\nlet WorkerProxies;\n\nif (isModern()) {\n\tWorkerProxies = {\n\t\tDefaultWorkerProxy: require('./WebWorker')\n\t};\n}\n\nmodule.exports = class ClientWorkerManager extends WorkerManager {\n\tconstructor ($config = {}) {\n\t\tif (!WorkerProxies) {\n\t\t\tthrow new Error('The browser does not support Workers');\n\t\t}\n\n\t\tlet config = {\n\t\t\tworkerType: 'web_worker'\n\t\t};\n\n\t\tObject.keys($config).forEach(key => (config[key] = $config[key]));\n\n\t\tsuper(config, WorkerProxies);\n\t}\n};","const functionToObjectURL = require('./functionToObjectURL');\n\nmodule.exports = function isModern () {\n\tif (typeof Worker != 'undefined' && (window.URL || window.webkitURL)) {\n\t\ttry {\n\t\t\tvar worker = new Worker(functionToObjectURL(function () {}));\n\t\t\tworker.terminate();\n\t\t\treturn true;\n\t\t} catch (error) {}\n\t}\n\n\treturn false;\n};","class Transferables {\n\tconstructor (transferables) {\n\t\tthis.transferables = transferables.map(transferable => {\n\t\t\tif (!(transferable instanceof ArrayBuffer) && transferable && transferable.buffer instanceof ArrayBuffer) {\n\t\t\t\treturn transferable.buffer;\n\t\t\t} else if (transferable instanceof ArrayBuffer) {\n\t\t\t\treturn transferable;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Task.js: invalid transferable argument (ensure its a buffer backed array, or a buffer)');\n\t\t\t}\n\t\t});\n\t}\n\n\ttoArray () {\n\t\treturn this.transferables;\n\t}\n}\n\nclass WorkerManager {\n\tconstructor ($config, WorkerProxies) {\n\t\t$config = $config || {};\n\n\t\tthis.id = ++WorkerManager.managerCount;\n\n\t\tthis._workerType = $config.workerType;\n\n\t\tif (this._workerType === 'worker_threads') {\n\t\t\ttry {\n\t\t\t\trequire('worker_threads');\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error('Your current version, or configuration of Node.js does not support worker_threads.');\n\t\t\t}\n\n\t\t\tthis._WorkerProxy = WorkerProxies.NodeWorkerThread;\n\t\t} else {\n\t\t\tthis._WorkerProxy = WorkerProxies.DefaultWorkerProxy;\n\t\t}\n\n\t\tthis._logger = $config.logger || console.log;\n\t\tthis._requires = $config.requires;\n\n\t\tthis._workerTaskConcurrency = ($config.workerTaskConcurrency || 1) - 1;\n\t\tthis._maxWorkers = $config.maxWorkers || 1;\n\t\tthis._idleTimeout = $config.idleTimeout === false ? false : $config.idleTimeout;\n\t\tthis._taskTimeout = $config.taskTimeout || 0;\n\t\tthis._idleCheckInterval = 1000;\n\t\tthis._warmStart = $config.warmStart || false;\n\t\tthis._warmStartCompleted = false;\n\t\tthis._globals = $config.globals;\n\t\tthis._globalsInitializationFunction = $config.initialize;\n\t\tthis._debug = $config.debug;\n\t\tthis._terminated = false;\n\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\taction: 'create_new_pool',\n\t\t\t\tmessage: `creating new pool : ${JSON.stringify($config)}`,\n\t\t\t\tconfig: $config\n\t\t\t});\n\t\t}\n\n\t\tthis._workers = [];\n\t\tthis._workersInitializing = [];\n\t\tthis._queue = [];\n\t\tthis._onWorkerTaskComplete = this._onWorkerTaskComplete.bind(this);\n\t\tthis._flushIdleWorkers = this._flushIdleWorkers.bind(this);\n\t\tthis._totalWorkersCreated = 0;\n\t\tthis._lastTaskTimeoutCheck = new Date();\n\n\t\tif (this._warmStart) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tthis._log({\n\t\t\t\t\t\taction: 'warmstart',\n\t\t\t\t\t\tmessage: 'warm starting workers'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < this._maxWorkers; i++) {\n\t\t\t\t\tthis._createWorker();\n\t\t\t\t}\n\n\t\t\t\tthis._warmStartCompleted = true;\n\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tthis._log({\n\t\t\t\t\t\taction: 'warmstart_completed',\n\t\t\t\t\t\tmessage: 'started workers'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\tstatic managerCount = 0;\n\tstatic taskCount = 0;\n\n\t_log (data) {\n\t\tlet event = {\n\t\t\tsource: 'manager',\n\t\t\tmanagerId: this.id\n\t\t};\n\n\t\tObject.keys(data).forEach(key => {\n\t\t\tevent[key] = data[key];\n\t\t});\n\n\t\tif (!event.message) {\n\t\t\tevent.message = event.action;\n\t\t}\n\n\t\tthis._logger(event, this);\n\t}\n\n\tgetActiveWorkerCount () {\n\t\treturn this._workersInitializing.length + this._workers.length;\n\t}\n\n\t_run (task) {\n\t\tif (this._terminated) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._idleTimeout && typeof this._idleCheckIntervalID !== 'number') {\n\t\t\tthis._idleCheckIntervalID = setInterval(this._flushIdleWorkers, this._idleCheckInterval);\n\t\t}\n\n\t\tif (!task.arguments || typeof task.arguments.length === 'undefined') {\n\t\t\tthrow new Error('task.js: \"arguments\" is required property, and it must be an array/array-like');\n\t\t}\n\n\t\tif (!task.function && (typeof task.function !== 'function' || typeof task.function !== 'string')) {\n\t\t\tthrow new Error('task.js: \"function\" is required property, and it must be a string or a function');\n\t\t}\n\n\t\tif (typeof task.arguments === 'object') {\n\t\t\ttask.arguments = Array.prototype.slice.call(task.arguments);\n\t\t}\n\n\t\ttask.id = ++WorkerManager.taskCount;\n\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\taction: 'add_to_queue',\n\t\t\t\ttaskId: task.id,\n\t\t\t\tmessage: `added taskId(${task.id}) to the queue`\n\t\t\t});\n\t\t}\n\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\ttask.resolve = resolve;\n\t\t\ttask.reject = reject;\n\t\t\tthis._queue.push(task);\n\t\t\tthis._next();\n\t\t}.bind(this));\n\t}\n\n\t_runOnWorker(worker, args, func) {\n\t\treturn new Promise (function (resolve, reject) {\n\t\t\tworker.run({\n\t\t\t\tid: ++WorkerManager.taskCount,\n\t\t\t\targuments: args,\n\t\t\t\tfunction: func,\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic transferables (...args) {\n\t\treturn new Transferables(args);\n\t}\n\n\trun (func, ...args) {\n\t\tlet wrappedFunc = this.wrap(func);\n\n\t\treturn wrappedFunc(...args);\n\t}\n\n\twrap (func) {\n\t\treturn function () {\n\t\t\tlet args = Array.from(arguments),\n\t\t\t\ttransferables = null,\n\t\t\t\tlastArg = args.slice(-1)[0];\n\n\t\t\tif (lastArg instanceof Transferables) {\n\t\t\t\ttransferables = lastArg.toArray();\n\t\t\t\targs = args.slice(0, -1);\n\t\t\t}\n\n\t\t\treturn this._run({\n\t\t\t\targuments: args,\n\t\t\t\ttransferables,\n\t\t\t\tfunction: func\n\t\t\t});\n\t\t}.bind(this);\n\t}\n\n\tterminate () {\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\taction: 'terminated',\n\t\t\t\tmessage: 'terminated'\n\t\t\t});\n\t\t}\n\n\t\tthis._terminated = true;\n\n\t\t// kill idle timeout (if it exists)\n\t\tif (this._idleTimeout && typeof this._idleCheckIntervalID == 'number') {\n\t\t\tclearInterval(this._idleCheckIntervalID);\n\t\t\tthis._idleCheckIntervalID = null;\n\t\t}\n\n\t\t// terminate all existing workers\n\t\tthis._workers.forEach(function (worker) {\n\t\t\tworker.terminate();\n\t\t});\n\n\t\t// flush worker pool\n\t\tthis._workers = [];\n\t\tthis._queue = [];\n\t}\n\n\t_reissueTasksInTimedoutWorkers () {\n\t\tif (new Date () - this._lastTaskTimeoutCheck < 5000) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastTaskTimeoutCheck = new Date();\n\n\t\tthis._workers.forEach(worker => {\n\t\t\tworker.tasks.some(task => {\n\t\t\t\tif (new Date() - task.startTime >= this._taskTimeout) {\n\t\t\t\t\tworker.forceExit();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_next = () => {\n\t\tif (this._terminated) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._taskTimeout) {\n\t\t\tthis._reissueTasksInTimedoutWorkers();\n\t\t}\n\n\t\tif (!this._queue.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet worker = this._getWorker();\n\n\t\tif (!worker) {\n\t\t\tsetTimeout(this._next, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tlet task = this._queue.shift();\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\taction: 'send_task_to_worker',\n\t\t\t\ttaskId: task.id,\n\t\t\t\tworkerId: worker.id,\n\t\t\t\tmessage: `sending taskId(${task.id}) to workerId(${worker.id})`\n\t\t\t});\n\t\t}\n\t\tworker.run(task);\n\t}\n\n\t_onWorkerTaskComplete = () => {\n\t\tthis._next();\n\t}\n\n\t_onWorkerExit = (worker) => {\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\taction: 'worker_died',\n\t\t\t\tworkerId: worker.id,\n\t\t\t\tmessage: `worker died, reissuing tasks`\n\t\t\t});\n\t\t}\n\n\t\t// purge dead worker from pool\n\t\tthis._workers = this._workers.filter(item => item != worker);\n\n\t\t// add work back to queue\n\t\tworker.tasks.forEach(task => {\n\t\t\tthis._queue.push(task.$options);\n\t\t});\n\n\t\t// run tick\n\t\tthis._next();\n\t}\n\n\t_flushIdleWorkers () {\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\taction: 'flush_idle_workers',\n\t\t\t\tmessage: `flushing idle workers`\n\t\t\t});\n\t\t}\n\n\t\tthis._workers = this._workers.filter(function (worker) {\n\t\t\tif (worker.tasks.length === 0 && new Date() - worker.lastTaskTimestamp > this._idleTimeout) {\n\t\t\t\tworker.terminate();\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t_getWorker () {\n\t\tlet idleWorkers = this._workers\n\t\t\t.filter(worker => worker.tasks.length <= this._workerTaskConcurrency)\n\t\t\t.sort((a, b) => a.tasks.length - b.tasks.length);\n\n\t\tif (idleWorkers.length) {\n\t\t\treturn idleWorkers[0];\n\t\t} else if (\n\t\t\tthis._workers.length < this._maxWorkers && this._workersInitializing.length === 0 &&\n\t\t\t!(this._warmStart && !this._warmStartCompleted)\n\t\t) {\n\t\t\treturn this._createWorker();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t_createWorker () {\n\t\tlet workerId = ++this._totalWorkersCreated;\n\n\t\tlet worker = new this._WorkerProxy({\n\t\t\tdebug: this._debug,\n\t\t\tlogger: this._logger,\n\t\t\tid: workerId,\n\t\t\tmanagerId: this.id,\n\t\t\tonTaskComplete: this._onWorkerTaskComplete,\n\t\t\tonExit: this._onWorkerExit\n\t\t});\n\n\t\tif (this._globalsInitializationFunction || this._globals || this._requires) {\n\t\t\tif (this._debug) {\n\t\t\t\tthis._log({\n\t\t\t\t\taction: 'run_global_initialize',\n\t\t\t\t\tmessage: `running global initialization code`\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet requireCode;\n\n\t\t\tif (this._workerType === 'web_worker') {\n\t\t\t\trequireCode = `\n\t\t\t\tif (Object.keys(requires).length) {\n\t\t\t\t\timportScripts(...Object.values(requires));\n\n\t\t\t\t\tObject.keys(requires).forEach(key => {\n\t\t\t\t\t\tif (typeof self[key] === 'undefined') {\n\t\t\t\t\t\t\tthrow new Error('Task.js: require failed importing ' + key + ' (\"' + requires[key] + '\")');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t`;\n\t\t\t} else {\n\t\t\t\trequireCode = `\n\t\t\t\tObject.keys(requires).forEach(key => {\n\t\t\t\t\tglobal[key] = require(requires[key]);\n\t\t\t\t});\n\t\t\t\t`;\n\t\t\t}\n\n\t\t\tlet globalsInitializationFunction = `function (_globals) {\n\t\t\t\tlet requires = ${JSON.stringify(this._requires || {})};\n\n\t\t\t\t${requireCode}\n\n\t\t\t\tif (typeof _globals != 'undefined') {\n\t\t\t\t\tObject.keys(_globals).forEach(key => {\n\t\t\t\t\t\tglobal[key] = _globals[key];\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t(${(this._globalsInitializationFunction || (() => {})).toString()})();\n\t\t\t}`.trim();\n\n\t\t\tthis._workersInitializing.push(worker);\n\t\t\tthis._runOnWorker(worker, [this._globals || {}], globalsInitializationFunction).then(function () {\n\t\t\t\tthis._workersInitializing = this._workersInitializing.filter(item => item != worker);\n\t\t\t\tthis._workers.push(worker);\n\t\t\t}.bind(this));\n\t\t\treturn null;\n\t\t} else {\n\t\t\tthis._workers.push(worker);\n\t\t\treturn worker;\n\t\t}\n\t}\n}\n\nmodule.exports = WorkerManager;","module.exports = function generateTaskFactoryMethod (defaults, WorkerProxy, WorkerManager) {\n\treturn function ($config, WorkerProxyOverride) {\n\t\tlet config = {};\n\n\t\t// clone defaults\n\t\tObject.keys(defaults).forEach(key => config[key] = defaults[key]);\n\n\t\t// apply user settings\n\t\tObject.keys($config).forEach(key => config[key] = $config[key]);\n\n\t\treturn new WorkerManager(config, WorkerProxyOverride || WorkerProxy);\n\t}\n}","const functionToObjectURL = require('./functionToObjectURL');\nconst GeneralWorker = require('../GeneralWorker');\n\nclass WebWorker extends GeneralWorker {\n\tconstructor ($config) {\n\t\tsuper(...arguments);\n\n\t\tthis._worker = new Worker(functionToObjectURL(this.WORKER_SOURCE));\n\t\tthis._worker.addEventListener('message', this._onMessage);\n\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\taction: 'initialized'\n\t\t\t});\n\t\t}\n\t}\n\n\tWORKER_SOURCE = `function () {\n\t\tlet global = new Proxy(\n\t\t  {},\n\t\t  {\n\t\t    set: (obj, prop, newval) => (self[prop] = newval)\n\t\t  }\n\t\t);\n\n\t\tonmessage = function (event) {\n\t\t\tvar message = event.data;\n\n\t\t\tvar args = Object.keys(message).filter(function (key) {\n\t\t\t\treturn key.match(/^argument/);\n\t\t\t}).sort(function (a, b) {\n\t\t\t\treturn parseInt(a.slice(8), 10) - parseInt(b.slice(8), 10);\n\t\t\t}).map(function (key) {\n\t\t\t\treturn message[key];\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tvar result = eval('(' + message.func + ')').apply(null, args);\n\n\t\t\t\tif (result && result.then && result.catch && result.finally) {\n\t\t\t\t\tresult.then(result => {\n\t\t\t\t\t\tself.postMessage({id: message.id, result: result});\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\tself.postMessage({id: message.id, error: error.stack});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tself.postMessage({id: message.id, result: result});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tself.postMessage({id: message.id, error: error.stack});\n\t\t\t}\n\t\t}\n\t}`;\n\n\t_onMessage = (event) => {\n\t\tlet message = event.data;\n\t\tthis.handleWorkerMessage(message);\n\t}\n\n\tpostMessage = (message, transferables) => {\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\ttaskId: message.id,\n\t\t\t\taction: 'send_task_to_actual_worker',\n\t\t\t\tmessage: `sending taskId(${message.id}) to worker process`\n\t\t\t});\n\t\t}\n\t\tthis._worker.postMessage(message, transferables);\n\t}\n\n\tterminate = () => {\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\tmessage: 'terminated'\n\t\t\t});\n\t\t}\n\t\tthis._worker.terminate();\n\t}\n}\n\nmodule.exports = WebWorker;","class GeneralWorker {\n\tconstructor ($config) {\n\t\tthis.id = $config.id;\n\t\tthis.managerId = $config.managerId;\n\t\tthis._debug = $config.debug;\n\t\tthis._logger = $config.logger;\n\n\t\tthis.tasks = [];\n\t\tthis.lastTaskTimestamp = null;\n\n\t\tthis._onTaskComplete = $config.onTaskComplete;\n\t\tthis._onExitHandler = $config.onExit;\n\t}\n\n\t_log (data) {\n\t\tlet event = {\n\t\t\tsource: 'worker',\n\t\t\tmanagerId: this.managerId,\n\t\t\tworkerId: this.id\n\t\t};\n\n\t\tObject.keys(data).forEach(key => {\n\t\t\tevent[key] = data[key];\n\t\t});\n\n\t\tif (!event.message) {\n\t\t\tevent.message = event.action;\n\t\t}\n\n\t\tthis._logger(event);\n\t}\n\n\thandleWorkerExit = () => {\n\t\tif (this._debug) {\n\t\t\tthis._log({\n\t\t\t\taction: 'killed'\n\t\t\t});\n\t\t}\n\t\tthis._onExitHandler(this);\n\t}\n\n\tforceExit = () => {\n\t\tthis._onExit();\n\t\tthis._worker.kill();\n\t}\n\n\thandleWorkerMessage = (message) => {\n\t\tlet taskIndex = null;\n\n\t\tthis.tasks.some(function (task, index) {\n\t\t\tif (message.id === task.id) {\n\t\t\t\ttaskIndex = index;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tif (taskIndex !== null) {\n\t\t\tvar task = this.tasks[taskIndex];\n\t\t\tif (message.error) {\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tthis._log({\n\t\t\t\t\t\ttaskId: task.id,\n\t\t\t\t\t\taction: 'task_error',\n\t\t\t\t\t\tmessage: `taskId(${task.id}) has thrown an error ${message.error}`\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\ttask.reject(new Error(`task.js: ${message.error}`));\n\t\t\t} else {\n\t\t\t\tif (this._debug) {\n\t\t\t\t\tthis._log({\n\t\t\t\t\t\ttaskId: task.id,\n\t\t\t\t\t\taction: 'task_completed',\n\t\t\t\t\t\tmessage: `taskId(${task.id}) has completed`\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\ttask.resolve(message.result);\n\t\t\t}\n\t\t\tthis._onTaskComplete(this);\n\t\t\tthis.tasks.splice(taskIndex, 1);\n\t\t}\n\t}\n\n\trun ($options) {\n\t\tthis.lastTaskTimestamp = new Date();\n\n\t\tlet task = {\n\t\t\tid: $options.id,\n\t\t\tstartTime: new Date(),\n\t\t\tresolve: $options.resolve,\n\t\t\treject: $options.reject,\n\t\t\t$options: $options\n\t\t};\n\n\t\tthis.tasks.push(task);\n\n\t\tlet message = {\n\t\t\tid: task.id,\n\t\t\tfunc: String($options.function)\n\t\t};\n\n\t\t// because of transferables (we want to keep this object flat)\n\t\tObject.keys($options.arguments).forEach(function (key, index) {\n\t\t\tmessage['argument' + index] = $options.arguments[index];\n\t\t});\n\n\t\tthis.postMessage(message, $options.transferables);\n\t}\n\n\t_purgeTasks(reason) {\n\t\tthis.tasks.forEach(task => {\n\t\t\ttask.reject(reason);\n\t\t});\n\t\tthis.tasks = [];\n\t}\n}\n\nmodule.exports = GeneralWorker;"],"sourceRoot":""}